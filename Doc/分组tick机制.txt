* 作用
	* 让不同的建筑实例自己注册 tick/update 的时间间隔，比如新实现的建筑A，正常它是1小时更新一次，
	为了提高测试效率，把它的更新时间注册为10秒一次，那么就不用等1小时，而是10秒就能看到执行结果
* 使用方法，在需要自定义tick的建筑类中：
	1、 需要提供tick接口方法的实现
		@Override
		public  void tick(long deltaTime){
			....
		}
	2、 注册tick 
		1、提供 postAddToWorld 接口方法的实现
		@Override
		public void postAddToWorld(){
			TickManager.instance().registerTick(City.senond2Ns(5),buildingIns);
		};		
		* postAddToWorld 方法会在建筑添加到游戏世界中后触发
		2、 在 postAddToWorld 执行自定义tick的注册
			public TickGroup registerTick(long tickInterval, Building obj)
			* 第一个参数就是tick的时间间隔，可以使用 City.senond2Ns 把秒转为纳秒
			* TickManager的tick是按tickInterval来分租更新的
	3、 这种注册状态会持久化到数据库，即便服务器重新开启，之前注册的tick任然会有效
	4、 如果要注销某个类/实例的自定义tick，调用
		TickManager.instance().unRegisterTick(City.senond2Ns(5),buildingIns);
		* 注意： 注销要传入注册时的间隔时间，比如注册时是5秒，注销时也必须是5秒
* 		